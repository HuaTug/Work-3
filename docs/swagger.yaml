definitions:
  serializer.Response:
    properties:
      data: {}
      error:
        type: string
      msg:
        type: string
      status:
        type: integer
    type: object
  serializer.ResponseUser:
    properties:
      data: {}
      error:
        type: string
      msg:
        type: string
      status:
        type: integer
    type: object
  service.CreateTaskService:
    properties:
      content:
        maxLength: 1000
        type: string
      status:
        type: integer
      title:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - title
    type: object
  service.DeleteTaskService:
    type: object
  service.ListTaskService:
    properties:
      page_num:
        type: integer
      page_size:
        type: integer
    type: object
  service.SearchTaskService:
    properties:
      info:
        type: string
    type: object
  service.ShowTaskService:
    type: object
  service.UpdateTaskService:
    properties:
      content:
        maxLength: 1000
        type: string
      id:
        type: integer
      status:
        type: integer
      title:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - title
    type: object
  service.UserService:
    properties:
      password:
        maxLength: 16
        minLength: 5
        type: string
      user_name:
        maxLength: 15
        minLength: 3
        type: string
    required:
    - password
    - user_name
    type: object
info:
  contact: {}
paths:
  /api/task/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: title,content,status
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.CreateTaskService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 创建任务
  /api/task/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.DeleteTaskService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 删除任务
  /api/task/list:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.ListTaskService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 展示所有任务
  /api/task/search:
    post:
      consumes:
      - application/json
      parameters:
      - description: id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.SearchTaskService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 查询任务
  /api/task/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: id,title,content
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.UpdateTaskService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 修改任务
  /http://127.0.0.1:8000/api/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名, 密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.UserService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.ResponseUser'
        "500":
          description: '{"status":500,"data":{},"Msg":{},"Error":"error"}'
          schema:
            $ref: '#/definitions/serializer.ResponseUser'
      summary: 用户注册
  /task/show:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.ShowTaskService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: '{"status":200,"data":{},"msg":"ok"}'
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: 展示任务
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: user_name, password
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/service.UserService'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            $ref: '#/definitions/serializer.ResponseUser'
        "500":
          description: '{"status":500,"data":{},"Msg":{},"Error":"error"}'
          schema:
            $ref: '#/definitions/serializer.ResponseUser'
      summary: 用户登录
swagger: "2.0"
